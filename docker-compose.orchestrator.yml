version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: orchestrator
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

  orchestrator:
    build:
      context: .
      dockerfile: agents/orchestrator_agent/Dockerfile
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=orchestrator
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=guest
      - RABBITMQ_PASSWORD=guest
      - JWT_SECRET_KEY=supersecretkey
      - API_PORT=8000
      - LOG_LEVEL=INFO
    ports:
      - "8000:8000"
    volumes:
      - ./agents/orchestrator_agent:/app/agents/orchestrator_agent
      - ./common:/app/common
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  executor:
    build:
      context: .
      dockerfile: agents/executor_agent/Dockerfile
    environment:
      - ORCHESTRATOR_API_URL=http://orchestrator:8000
      - AUTH_ENABLED=true
      - AUTH_USERNAME=executor
      - AUTH_PASSWORD=executor_password
      - RABBITMQ_ENABLED=true
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=guest
      - RABBITMQ_PASSWORD=guest
      - CAPABILITIES=data_processing,basic_computation
      - LOG_LEVEL=INFO
    volumes:
      - ./agents/executor_agent:/app/agents/executor_agent
      - ./common:/app/common
    depends_on:
      - orchestrator

volumes:
  postgres_data:
